-- Generated by Oracle SQL Developer Data Modeler 4.1.2.1.899
--   at:        2015-12-06 12:53:58 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

-- Daniel Sienkiewicz
-- 206358


CREATE TABLE Relation_12
  (
    autor_id   NUMBER NOT NULL ,
    ksiazka_id NUMBER NOT NULL
  ) ;
ALTER TABLE Relation_12 ADD CONSTRAINT Relation_12_PK PRIMARY KEY ( autor_id, ksiazka_id ) ;


CREATE TABLE Relation_25
  (
    wydawnictwo_id NUMBER NOT NULL ,
    ksiazka_id     NUMBER NOT NULL
  ) ;
ALTER TABLE Relation_25 ADD CONSTRAINT Relation_25_PK PRIMARY KEY ( wydawnictwo_id, ksiazka_id ) ;


CREATE TABLE Relation_37
  (
    pracownik_id NUMBER NOT NULL ,
    premia_id    NUMBER NOT NULL
  ) ;
ALTER TABLE Relation_37 ADD CONSTRAINT Relation_37_PK PRIMARY KEY ( pracownik_id, premia_id ) ;


CREATE TABLE Relation_38
  (
    sprzedaz_id   NUMBER NOT NULL ,
    egzemplarz_id NUMBER NOT NULL
  ) ;
CREATE UNIQUE INDEX Relation_38__IDX ON Relation_38
  (
    egzemplarz_id ASC
  )
  ;
ALTER TABLE Relation_38 ADD CONSTRAINT Relation_38_PK PRIMARY KEY ( sprzedaz_id, egzemplarz_id ) ;


CREATE TABLE Relation_39
  (
    rezerwacja_id NUMBER NOT NULL ,
    egzemplarz_id NUMBER NOT NULL
  ) ;
CREATE UNIQUE INDEX Relation_39__IDX ON Relation_39
  (
    egzemplarz_id ASC
  )
  ;
ALTER TABLE Relation_39 ADD CONSTRAINT Relation_39_PK PRIMARY KEY ( rezerwacja_id, egzemplarz_id ) ;


CREATE TABLE adres
  (
    id           NUMBER NOT NULL ,
    ulica        VARCHAR2 (60 CHAR) NOT NULL ,
    nrDomu       VARCHAR2 (10) NOT NULL ,
    nrMieszkania NUMBER ,
    miasto       VARCHAR2 (40 CHAR) NOT NULL ,
    kodPocztowy  VARCHAR2 (6 CHAR) NOT NULL
  ) ;
ALTER TABLE adres ADD CONSTRAINT adres_PK PRIMARY KEY ( id ) ;


CREATE TABLE autor
  ( id NUMBER NOT NULL , daneOsobowe_id NUMBER NOT NULL
  ) ;
CREATE UNIQUE INDEX autor__IDX ON autor
  (
    daneOsobowe_id ASC
  )
  ;
ALTER TABLE autor ADD CONSTRAINT autor_PK PRIMARY KEY ( id ) ;


CREATE TABLE daneOsobowe
  (
    id         NUMBER NOT NULL ,
    imie       VARCHAR2 (20) NOT NULL ,
    nazwisko   VARCHAR2 (20) NOT NULL ,
    dataUr     DATE NOT NULL ,
    pesel      NUMBER NOT NULL ,
    nrTelefonu NUMBER,
	plec 	   VARCHAR(1)
  ) ;
ALTER TABLE daneOsobowe ADD CONSTRAINT daneOsobowe_PK PRIMARY KEY ( id ) ;


CREATE TABLE egzemplarz
  (
    id         NUMBER NOT NULL ,
    dostepny   CHAR (1) NOT NULL ,
    ksiazka_id NUMBER NOT NULL ,
    typ_id     NUMBER NOT NULL ,
    stan_id    NUMBER NOT NULL ,
    oddzial_id NUMBER NOT NULL
  ) ;
CREATE INDEX egzemplarz__IDX ON egzemplarz
  ( typ_id ASC
  ) ;
CREATE INDEX egzemplarz__IDXv1 ON egzemplarz
  ( stan_id ASC
  ) ;
ALTER TABLE egzemplarz ADD CONSTRAINT egzemplarz_PK PRIMARY KEY ( id ) ;


CREATE TABLE gatunek
  ( id NUMBER NOT NULL , nazwa VARCHAR2 (30) NOT NULL
  ) ;
ALTER TABLE gatunek ADD CONSTRAINT gatunek_PK PRIMARY KEY ( id ) ;


CREATE TABLE klient
  (
    id             NUMBER NOT NULL ,
    nrKlienta      NUMBER ,
    daneOsobowe_id NUMBER NOT NULL ,
    adres_id       NUMBER NOT NULL
  ) ;
CREATE INDEX klient__IDX ON klient
  ( daneOsobowe_id ASC
  ) ;
CREATE INDEX klient__IDXv1 ON klient
  ( adres_id ASC
  ) ;
ALTER TABLE klient ADD CONSTRAINT klient_PK PRIMARY KEY ( id ) ;


CREATE TABLE ksiazka
  (
    id          NUMBER NOT NULL ,
    tytul       VARCHAR2 (30) NOT NULL ,
    rokWydania  NUMBER NOT NULL ,
    liczbaStron NUMBER NOT NULL ,
    cena        NUMBER NOT NULL ,
    gatunek_id  NUMBER NOT NULL
  ) ;
ALTER TABLE ksiazka ADD CONSTRAINT ksiazka_PK PRIMARY KEY ( id ) ;


CREATE TABLE oddzial
  (
    id       NUMBER NOT NULL ,
    nazwa    VARCHAR2 (30) NOT NULL ,
    adres_id NUMBER NOT NULL
  ) ;
CREATE UNIQUE INDEX oddzial__IDX ON oddzial
  (
    adres_id ASC
  )
  ;
ALTER TABLE oddzial ADD CONSTRAINT oddzial_PK PRIMARY KEY ( id ) ;


CREATE TABLE pracownik
  (
    id             NUMBER NOT NULL ,
    nrSluzbowy     NUMBER ,
    daneOsobowe_id NUMBER NOT NULL ,
    stanowisko_id  NUMBER NOT NULL ,
    oddzial_id     NUMBER NOT NULL ,
    adres_id       NUMBER NOT NULL
  ) ;
CREATE UNIQUE INDEX pracownik__IDX ON pracownik
  (
    daneOsobowe_id ASC
  )
  ;
CREATE UNIQUE INDEX pracownik__IDXv1 ON pracownik
  (
    adres_id ASC
  )
  ;
ALTER TABLE pracownik ADD CONSTRAINT pracownik_PK PRIMARY KEY ( id ) ;


CREATE TABLE premia
  (
    id       NUMBER NOT NULL ,
    wielkosc NUMBER NOT NULL ,
    okazja   VARCHAR2 (30)
  ) ;
ALTER TABLE premia ADD CONSTRAINT premia_PK PRIMARY KEY ( id ) ;


CREATE TABLE rabat
  (
    id        NUMBER NOT NULL ,
    wielkosc  NUMBER NOT NULL ,
    aktywny   CHAR (1) NOT NULL ,
    waznyDo   DATE NOT NULL ,
    klient_id NUMBER NOT NULL
  ) ;
ALTER TABLE rabat ADD CONSTRAINT rabat_PK PRIMARY KEY ( id ) ;


CREATE TABLE rezerwacja
  (
    id        NUMBER NOT NULL ,
    naKiedy   DATE NOT NULL ,
    klient_id NUMBER NOT NULL
  ) ;
ALTER TABLE rezerwacja ADD CONSTRAINT rezerwacja_PK PRIMARY KEY ( id ) ;


CREATE TABLE sprzedaz
  (
    id            NUMBER NOT NULL ,
    dataSprzedazy DATE NOT NULL ,
    klient_id     NUMBER NOT NULL ,
    oddzial_id    NUMBER NOT NULL
  ) ;
ALTER TABLE sprzedaz ADD CONSTRAINT sprzedaz_PK PRIMARY KEY ( id ) ;


CREATE TABLE stan
  ( id NUMBER NOT NULL , nazwa VARCHAR2 (30) NOT NULL
  ) ;
ALTER TABLE stan ADD CONSTRAINT stan_PK PRIMARY KEY ( id ) ;


CREATE TABLE stanowisko
  (
    id         NUMBER NOT NULL ,
    nazwa      VARCHAR2 (30) NOT NULL ,
    wyplata_id NUMBER NOT NULL
  ) ;
ALTER TABLE stanowisko ADD CONSTRAINT stanowisko_PK PRIMARY KEY ( id ) ;


CREATE TABLE typ
  ( id NUMBER NOT NULL , nazwa VARCHAR2 (30) NOT NULL
  ) ;
ALTER TABLE typ ADD CONSTRAINT typ_PK PRIMARY KEY ( id ) ;


CREATE TABLE wydawnictwo
  (
    id    NUMBER NOT NULL ,
    nazwa VARCHAR2 (30) NOT NULL
  ) ;
ALTER TABLE wydawnictwo ADD CONSTRAINT wydawnictwo_PK PRIMARY KEY ( id ) ;


CREATE TABLE wyplata
  (
    id     NUMBER NOT NULL ,
    brutto NUMBER NOT NULL ,
    netto  NUMBER NOT NULL
  ) ;
ALTER TABLE wyplata ADD CONSTRAINT wyplata_PK PRIMARY KEY ( id ) ;


ALTER TABLE Relation_12 ADD CONSTRAINT FK_ASS_150 FOREIGN KEY ( autor_id ) REFERENCES autor ( id ) ;

ALTER TABLE Relation_12 ADD CONSTRAINT FK_ASS_151 FOREIGN KEY ( ksiazka_id ) REFERENCES ksiazka ( id ) ;

ALTER TABLE Relation_25 ADD CONSTRAINT FK_ASS_154 FOREIGN KEY ( wydawnictwo_id ) REFERENCES wydawnictwo ( id ) ;

ALTER TABLE Relation_25 ADD CONSTRAINT FK_ASS_155 FOREIGN KEY ( ksiazka_id ) REFERENCES ksiazka ( id ) ;

ALTER TABLE Relation_37 ADD CONSTRAINT FK_ASS_158 FOREIGN KEY ( pracownik_id ) REFERENCES pracownik ( id ) ;

ALTER TABLE Relation_37 ADD CONSTRAINT FK_ASS_159 FOREIGN KEY ( premia_id ) REFERENCES premia ( id ) ;

ALTER TABLE Relation_38 ADD CONSTRAINT FK_ASS_162 FOREIGN KEY ( sprzedaz_id ) REFERENCES sprzedaz ( id ) ;

ALTER TABLE Relation_38 ADD CONSTRAINT FK_ASS_163 FOREIGN KEY ( egzemplarz_id ) REFERENCES egzemplarz ( id ) ;

ALTER TABLE Relation_39 ADD CONSTRAINT FK_ASS_174 FOREIGN KEY ( rezerwacja_id ) REFERENCES rezerwacja ( id ) ;

ALTER TABLE Relation_39 ADD CONSTRAINT FK_ASS_175 FOREIGN KEY ( egzemplarz_id ) REFERENCES egzemplarz ( id ) ;

ALTER TABLE autor ADD CONSTRAINT autor_daneOsobowe_FK FOREIGN KEY ( daneOsobowe_id ) REFERENCES daneOsobowe ( id ) ;

ALTER TABLE egzemplarz ADD CONSTRAINT egzemplarz_ksiazka_FK FOREIGN KEY ( ksiazka_id ) REFERENCES ksiazka ( id ) ;

ALTER TABLE egzemplarz ADD CONSTRAINT egzemplarz_oddzial_FK FOREIGN KEY ( oddzial_id ) REFERENCES oddzial ( id ) ;

ALTER TABLE egzemplarz ADD CONSTRAINT egzemplarz_stan_FK FOREIGN KEY ( stan_id ) REFERENCES stan ( id ) ;

ALTER TABLE egzemplarz ADD CONSTRAINT egzemplarz_typ_FK FOREIGN KEY ( typ_id ) REFERENCES typ ( id ) ;

ALTER TABLE klient ADD CONSTRAINT klient_adres_FK FOREIGN KEY ( adres_id ) REFERENCES adres ( id ) ;

ALTER TABLE klient ADD CONSTRAINT klient_daneOsobowe_FK FOREIGN KEY ( daneOsobowe_id ) REFERENCES daneOsobowe ( id ) ;

ALTER TABLE ksiazka ADD CONSTRAINT ksiazka_gatunek_FK FOREIGN KEY ( gatunek_id ) REFERENCES gatunek ( id ) ;

ALTER TABLE oddzial ADD CONSTRAINT oddzial_adres_FK FOREIGN KEY ( adres_id ) REFERENCES adres ( id ) ;

ALTER TABLE pracownik ADD CONSTRAINT pracownik_adres_FK FOREIGN KEY ( adres_id ) REFERENCES adres ( id ) ;

ALTER TABLE pracownik ADD CONSTRAINT pracownik_daneOsobowe_FK FOREIGN KEY ( daneOsobowe_id ) REFERENCES daneOsobowe ( id ) ;

ALTER TABLE pracownik ADD CONSTRAINT pracownik_oddzial_FK FOREIGN KEY ( oddzial_id ) REFERENCES oddzial ( id ) ;

ALTER TABLE pracownik ADD CONSTRAINT pracownik_stanowisko_FK FOREIGN KEY ( stanowisko_id ) REFERENCES stanowisko ( id ) ;

ALTER TABLE rabat ADD CONSTRAINT rabat_klient_FK FOREIGN KEY ( klient_id ) REFERENCES klient ( id ) ;

ALTER TABLE rezerwacja ADD CONSTRAINT rezerwacja_klient_FK FOREIGN KEY ( klient_id ) REFERENCES klient ( id ) ;

ALTER TABLE sprzedaz ADD CONSTRAINT sprzedaz_klient_FK FOREIGN KEY ( klient_id ) REFERENCES klient ( id ) ;

ALTER TABLE sprzedaz ADD CONSTRAINT sprzedaz_oddzial_FK FOREIGN KEY ( oddzial_id ) REFERENCES oddzial ( id ) ;

ALTER TABLE stanowisko ADD CONSTRAINT stanowisko_wyplata_FK FOREIGN KEY ( wyplata_id ) REFERENCES wyplata ( id ) ;

CREATE SEQUENCE adres_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER adres_id_TRG BEFORE
  INSERT ON adres FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := adres_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE autor_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER autor_id_TRG BEFORE
  INSERT ON autor FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := autor_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE daneOsobowe_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER daneOsobowe_id_TRG BEFORE
  INSERT ON daneOsobowe FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := daneOsobowe_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE egzemplarz_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER egzemplarz_id_TRG BEFORE
  INSERT ON egzemplarz FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := egzemplarz_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE gatunek_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER gatunek_id_TRG BEFORE
  INSERT ON gatunek FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := gatunek_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE klient_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER klient_id_TRG BEFORE
  INSERT ON klient FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := klient_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE ksiazka_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER ksiazka_id_TRG BEFORE
  INSERT ON ksiazka FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := ksiazka_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE oddzial_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER oddzial_id_TRG BEFORE
  INSERT ON oddzial FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := oddzial_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE pracownik_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER pracownik_id_TRG BEFORE
  INSERT ON pracownik FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := pracownik_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE premia_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER premia_id_TRG BEFORE
  INSERT ON premia FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := premia_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE rabat_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER rabat_id_TRG BEFORE
  INSERT ON rabat FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := rabat_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE rezerwacja_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER rezerwacja_id_TRG BEFORE
  INSERT ON rezerwacja FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := rezerwacja_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE sprzedaz_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER sprzedaz_id_TRG BEFORE
  INSERT ON sprzedaz FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := sprzedaz_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE stan_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER stan_id_TRG BEFORE
  INSERT ON stan FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := stan_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE stanowisko_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER stanowisko_id_TRG BEFORE
  INSERT ON stanowisko FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := stanowisko_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE typ_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER typ_id_TRG BEFORE
  INSERT ON typ FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := typ_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE wydawnictwo_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER wydawnictwo_id_TRG BEFORE
  INSERT ON wydawnictwo FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := wydawnictwo_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE wyplata_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER wyplata_id_TRG BEFORE
  INSERT ON wyplata FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := wyplata_id_SEQ.NEXTVAL;
END;
/


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            23
-- CREATE INDEX                            10
-- ALTER TABLE                             51
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          18
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         18
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
